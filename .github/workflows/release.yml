name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      issues: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.12
          registry-url: "https://registry.npmjs.org"
          cache: "pnpm"

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Setup git user
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Build
        run: pnpm build

      - name: Test
        run: pnpm test

      - name: Check for version changes
        id: check-version
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          CURRENT_VERSION=$(node -p "require('./package.json').version")

          echo "Last tag: $LAST_TAG"
          echo "Current version: v$CURRENT_VERSION"

          if [ "$LAST_TAG" != "v$CURRENT_VERSION" ]; then
            echo "New version detected: v$CURRENT_VERSION"
            echo "should_publish=true" >> $GITHUB_OUTPUT
            echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          else
            echo "No version change detected"
            echo "should_publish=false" >> $GITHUB_OUTPUT
          fi

      - name: Generate changelog and version
        if: steps.check-version.outputs.should_publish == 'true'
        run: pnpm version

      - name: Create GitHub Release
        if: steps.check-version.outputs.should_publish == 'true'
        uses: ncipollo/release-action@v1
        with:
          generateReleaseNotes: true
          prerelease: false
          tag: v${{ steps.check-version.outputs.version }}
          name: v${{ steps.check-version.outputs.version }}
          body: |
            Please refer to [CHANGELOG.md](./CHANGELOG.md) for details.

      - name: Publish to npm
        if: steps.check-version.outputs.should_publish == 'true'
        run: pnpm publish --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
